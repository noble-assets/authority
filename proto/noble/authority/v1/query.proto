syntax = "proto3";

package noble.authority.v1;

import "amino/amino.proto";
import "cosmos/query/v1/query.proto";
import "cosmos_proto/cosmos.proto";
import "google/api/annotations.proto";

option go_package = "github.com/noble-assets/authority/types";

service Query {
  rpc Owner(QueryOwner) returns (QueryOwnerResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/noble/authority/v1/owner";
  }

  rpc PendingOwner(QueryPendingOwner) returns (QueryPendingOwnerResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/noble/authority/v1/pending_owner";
  }
}

//

message QueryOwner {}

message QueryOwnerResponse {
  string owner = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message QueryPendingOwner {}

message QueryPendingOwnerResponse {
  string pending_owner = 1 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (amino.dont_omitempty) = true
  ];
}
